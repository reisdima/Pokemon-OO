/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaceGrafica;
import pokemon.*;
import classesPokemons.*;
import java.util.ArrayList;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JProgressBar;
import pokemon.Treinador;
/**
 *
 * @author Alorya
 */
public class Tela extends javax.swing.JFrame {
    public int i=0;
    public Pokemon p1 = new Pikachu();
    public Pokemon p2 = new Blastoise();
    public Pokemon p3 = new Bulbassauro();
    public Pokemon p4 = new Charizard();
    public Pokemon p5 = new Charmander();
    public Pokemon p6 = new Flareon();
    public Pokemon p7 = new Gyrados();
    public Pokemon p8 = new Jolteon();
    public Pokemon p9 = new Onix();
    public Pokemon p10 = new Venossauro();
    public Pokemon p11 = new Vaporeon();
    public Pokemon p12 = new Squirtle();
    public Time t1 = new Time(p5,p11,p10);
    public Time t2 = new Time(p12,p6,p7);
    public Time t3 = new Time(p3,p8,p2);
    public Time t4 = new Time(p1,p4,p9);
    public Time timeA;
    public Time timeB;
    public Treinador treinadorA;
    public Treinador treinadorB;
    public ArrayList<JProgressBar> vidasA;
    public ArrayList<JProgressBar> vidasB;
    public ArrayList<JProgressBar> vidas;
    public ArrayList<JLabel> pokemonsA;
    public ArrayList<JLabel> pokemonsB;
    public ArrayList<JLabel> pokemons;
    public ArrayList<JButton> habilidades;
    public float[] porcentagem;
    public Batalha battle;
    private Pokemon pokemonVez;
    private Treinador treinadorVez;
    private int controle = 0;
    
    /**
     * Creates new form Tela
     */
    public Tela() {
        
        initComponents();
        this.setLocationRelativeTo(null);
        pokemonsA = null;
        pokemonsB = null;
        escolherTime.setVisible(false);
        batalha.setVisible(false);
        vidasA = new ArrayList<JProgressBar>();
        vidasB = new ArrayList<JProgressBar>();
        vidas = new ArrayList<JProgressBar>();
        
        pokemonsA = new ArrayList<JLabel>();
        pokemonsB = new ArrayList<JLabel>();
        pokemons = new ArrayList<JLabel>();
        
        porcentagem = new float[6];
        
        habilidades = new ArrayList<JButton>();
        
        
        
        getHabilidades(habilidades);
        geraPokemons(pokemons);
        geraVidas(vidas, porcentagem);
    }
    
    public void getHabilidades(ArrayList<JButton> habilidades){
        habilidades.add(hab1);
        habilidades.add(hab2);
        habilidades.add(hab3);
        habilidades.add(hab4);
        
        for(int i=0; i<habilidades.size(); i++){
            habilidades.get(i).setVisible(false);
        }
    }
    
    public void geraPokemons(ArrayList<JLabel> pokemons){
        pokemons.add(pokemon1);
        pokemons.add(pokemon2);
        pokemons.add(pokemon3);
        pokemons.add(pokemon4);
        pokemons.add(pokemon5);
        pokemons.add(pokemon6);
        
        for(int i=0; i<pokemons.size(); i++){
            pokemons.get(i).setVisible(false);
        }
    }
    
    public void geraVidas(ArrayList<JProgressBar> vidas, float[] porcentagem){
        vidas.add(Vida1);
        vidas.add(Vida2);
        vidas.add(Vida3);
        vidas.add(Vida4);
        vidas.add(Vida5);
        vidas.add(Vida6);
        
        for(int i=0; i<6; i++){
            vidas.get(i).setVisible(false);
            porcentagem[i] = 100;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        batalha = new javax.swing.JPanel();
        pokemon1 = new javax.swing.JLabel();
        pokemon2 = new javax.swing.JLabel();
        pokemon3 = new javax.swing.JLabel();
        pokemon4 = new javax.swing.JLabel();
        pokemon5 = new javax.swing.JLabel();
        pokemon6 = new javax.swing.JLabel();
        Vida1 = new javax.swing.JProgressBar();
        Vida2 = new javax.swing.JProgressBar();
        Vida3 = new javax.swing.JProgressBar();
        Vida4 = new javax.swing.JProgressBar();
        Vida5 = new javax.swing.JProgressBar();
        Vida6 = new javax.swing.JProgressBar();
        hab1 = new javax.swing.JButton();
        hab2 = new javax.swing.JButton();
        hab3 = new javax.swing.JButton();
        hab4 = new javax.swing.JButton();
        iniciarBatalha = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        escolherTime = new javax.swing.JPanel();
        time1 = new javax.swing.JButton();
        time2 = new javax.swing.JButton();
        time3 = new javax.swing.JButton();
        time4 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        telaInicial = new javax.swing.JPanel();
        comecarJogo = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1290, 760));
        getContentPane().setLayout(null);

        batalha.setLayout(null);
        batalha.add(pokemon1);
        pokemon1.setBounds(80, 80, 100, 130);

        pokemon2.setBackground(new java.awt.Color(255, 51, 51));
        batalha.add(pokemon2);
        pokemon2.setBounds(80, 300, 100, 130);
        batalha.add(pokemon3);
        pokemon3.setBounds(80, 510, 100, 130);

        pokemon4.setBackground(new java.awt.Color(255, 51, 51));
        batalha.add(pokemon4);
        pokemon4.setBounds(1040, 50, 100, 130);

        pokemon5.setBackground(new java.awt.Color(255, 51, 51));
        batalha.add(pokemon5);
        pokemon5.setBounds(1030, 260, 100, 130);

        pokemon6.setBackground(new java.awt.Color(255, 51, 51));
        batalha.add(pokemon6);
        pokemon6.setBounds(1020, 490, 100, 130);

        Vida1.setBackground(new java.awt.Color(255, 0, 0));
        Vida1.setForeground(new java.awt.Color(0, 255, 102));
        batalha.add(Vida1);
        Vida1.setBounds(60, 230, 146, 14);

        Vida2.setBackground(new java.awt.Color(255, 0, 0));
        Vida2.setForeground(new java.awt.Color(0, 255, 102));
        batalha.add(Vida2);
        Vida2.setBounds(60, 440, 146, 14);

        Vida3.setBackground(new java.awt.Color(255, 0, 0));
        Vida3.setForeground(new java.awt.Color(0, 255, 102));
        batalha.add(Vida3);
        Vida3.setBounds(60, 650, 146, 14);

        Vida4.setBackground(new java.awt.Color(255, 0, 0));
        Vida4.setForeground(new java.awt.Color(0, 255, 102));
        batalha.add(Vida4);
        Vida4.setBounds(1020, 200, 146, 14);

        Vida5.setBackground(new java.awt.Color(255, 0, 0));
        Vida5.setForeground(new java.awt.Color(0, 255, 102));
        batalha.add(Vida5);
        Vida5.setBounds(1000, 420, 146, 14);

        Vida6.setBackground(new java.awt.Color(255, 0, 0));
        Vida6.setForeground(new java.awt.Color(0, 255, 102));
        batalha.add(Vida6);
        Vida6.setBounds(1010, 640, 146, 14);

        hab1.setText("Habilidade 1");
        hab1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hab1ActionPerformed(evt);
            }
        });
        batalha.add(hab1);
        hab1.setBounds(440, 560, 150, 40);

        hab2.setText("Habilidade 2");
        hab2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hab2ActionPerformed(evt);
            }
        });
        batalha.add(hab2);
        hab2.setBounds(440, 640, 150, 40);

        hab3.setText("Habilidade 3");
        hab3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hab3ActionPerformed(evt);
            }
        });
        batalha.add(hab3);
        hab3.setBounds(690, 560, 150, 40);

        hab4.setText("Passar");
        hab4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hab4ActionPerformed(evt);
            }
        });
        batalha.add(hab4);
        hab4.setBounds(690, 640, 150, 40);

        iniciarBatalha.setText("Iniciar Batalha!");
        iniciarBatalha.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        iniciarBatalha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                iniciarBatalhaActionPerformed(evt);
            }
        });
        batalha.add(iniciarBatalha);
        iniciarBatalha.setBounds(570, 20, 150, 50);

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/cgfd.png"))); // NOI18N
        batalha.add(jLabel3);
        jLabel3.setBounds(0, 0, 1280, 720);

        getContentPane().add(batalha);
        batalha.setBounds(0, 0, 1280, 720);

        escolherTime.setLayout(null);

        time1.setBorderPainted(false);
        time1.setContentAreaFilled(false);
        time1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        time1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                time1ActionPerformed(evt);
            }
        });
        escolherTime.add(time1);
        time1.setBounds(150, 240, 260, 50);

        time2.setBorderPainted(false);
        time2.setContentAreaFilled(false);
        time2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        time2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                time2ActionPerformed(evt);
            }
        });
        escolherTime.add(time2);
        time2.setBounds(870, 240, 260, 50);

        time3.setBorderPainted(false);
        time3.setContentAreaFilled(false);
        time3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        time3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                time3ActionPerformed(evt);
            }
        });
        escolherTime.add(time3);
        time3.setBounds(150, 620, 270, 50);

        time4.setBorderPainted(false);
        time4.setContentAreaFilled(false);
        time4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        time4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                time4ActionPerformed(evt);
            }
        });
        escolherTime.add(time4);
        time4.setBounds(870, 620, 260, 50);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/TelaEscolhaPersonagem.png"))); // NOI18N
        jLabel2.setText("jLabel2");
        escolherTime.add(jLabel2);
        jLabel2.setBounds(0, 0, 1280, 720);

        getContentPane().add(escolherTime);
        escolherTime.setBounds(0, 0, 1280, 720);

        telaInicial.setLayout(null);

        comecarJogo.setBorderPainted(false);
        comecarJogo.setContentAreaFilled(false);
        comecarJogo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        comecarJogo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comecarJogoActionPerformed(evt);
            }
        });
        telaInicial.add(comecarJogo);
        comecarJogo.setBounds(425, 270, 470, 105);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/TelaInicial.png"))); // NOI18N
        jLabel1.setText("jLabel1");
        telaInicial.add(jLabel1);
        jLabel1.setBounds(0, 0, 1280, 720);

        getContentPane().add(telaInicial);
        telaInicial.setBounds(0, 0, 1280, 720);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void comecarJogoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comecarJogoActionPerformed
        telaInicial.setVisible(false);
        batalha.setVisible(false);
        escolherTime.setVisible(true);
    }//GEN-LAST:event_comecarJogoActionPerformed

    private void time3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_time3ActionPerformed
        if(i==0){
            System.out.println("Jogador 1 escolheu time 3");
            timeA=t3;
            i=1;            
        }
        else{
            System.out.println("Jogador 2 escolheu time 3");
            i=0;
            timeB=t3;
            escolherTime.setVisible(false);
            batalha.setVisible(true);
            atribuiTimes();
        }     
    }//GEN-LAST:event_time3ActionPerformed

    private void time2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_time2ActionPerformed
        if(i==0){
            System.out.println("Jogador 1 escolheu time 2");
            i=1;
            timeA=t2;
        }
        else{
            System.out.println("Jogador 2 escolheu time 2");
            i=0;
            timeB=t2;
            escolherTime.setVisible(false);
            batalha.setVisible(true);
            atribuiTimes();
        }  
    }//GEN-LAST:event_time2ActionPerformed

    private void time1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_time1ActionPerformed
        if(i==0){
            System.out.println("Jogador 1 escolheu time 1");
            i=1;
            timeA=t1;
        }
        else{
            System.out.println("Jogador 2 escolheu time 1");
            i=0;
            timeB=t1;
            escolherTime.setVisible(false);
            batalha.setVisible(true);
            atribuiTimes();
        }  
    }//GEN-LAST:event_time1ActionPerformed

    private void time4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_time4ActionPerformed
        if(i==0){
            System.out.println("Jogador 1 escolheu time 4");
            i=1;
            timeA=t4;
        }
        else{
            System.out.println("Jogador 2 escolheu time 4");
            i=0;
            timeB=t4;
            escolherTime.setVisible(false);
            batalha.setVisible(true);
            atribuiTimes();
        }  
    }//GEN-LAST:event_time4ActionPerformed

    private void atribuiTimes(){
        treinadorA = new Treinador(timeA);
        treinadorB = new Treinador(timeB);
        
        
    }
    public void atualizaBatalha(){
        porcentagem = battle.getPorcentagem();
        for(int i=0; i<vidas.size(); i++){
            vidas.get(i).setValue(Math.round(porcentagem[i]));
        }
        
        
        if(battle.verificaFim()){
            for(int i=0; i<habilidades.size(); i++){
                habilidades.get(i).setVisible(false);
            }
        }
        else{
            calculaBatalha();
        }
        
    }
    
    public void calculaBatalha(){
        battle.pokemonAtual();
        battle.checaVantagem();
        pokemonVez = battle.getPokemonVez();
        for(int i=0; i<pokemons.size(); i++){
            if(pokemons.get(i).getName() == pokemonVez.getNome()){
                pokemons.get(i).setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
            }
            else
                pokemons.get(i).setBorder(javax.swing.BorderFactory.createEmptyBorder());
        }
        System.out.println("Pokemon vez: " + pokemonVez.getNome());
        exibeHabilidades(pokemonVez);
        treinadorVez = battle.getTreinadorVez();
        //treinadorVez.escolheAtaque(pokemonVez);
        //battle.ataque(treinadorVez);
        //atualizaBatalha();
    }
    
    public void exibeHabilidades(Pokemon p){
        for(int i=0; i<habilidades.size(); i++){
            habilidades.get(i).setVisible(true);
            habilidades.get(i).setText(p.getHabilidades()[i]);
        }
    }
    
    
    
   
    
    private void iniciarBatalhaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_iniciarBatalhaActionPerformed
        iniciarBatalha.setVisible(false);
        for(int i=0; i<6; i++){
            pokemons.get(i).setVisible(true);
            vidas.get(i).setVisible(true);
        }
        if(timeA!=null&&timeB!=null){
            for(int i=0; i < 3; i++){
                pokemons.get(i).setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/" + timeA.pokemons.get(i).getImagem())));
                pokemons.get(i).setName(timeA.pokemons.get(i).getNome());
                pokemons.get(i).setVisible(true);
            }
            for(int i=0; i < 3; i++){
                pokemons.get(i+3).setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/" + timeB.pokemons.get(i).getImagem())));
                pokemons.get(i+3).setName(timeB.pokemons.get(i).getNome());
                pokemons.get(i+3).setVisible(true);
            }
            battle = new Batalha(treinadorA, treinadorB);
        }
        atualizaBatalha();
        //calculaBatalha();
    }//GEN-LAST:event_iniciarBatalhaActionPerformed

    private void hab1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hab1ActionPerformed
        pokemonVez.setHabilidadeEscolhida(1);
        treinadorVez.escolheAtaque(pokemonVez);
        battle.ataque(treinadorVez);
        atualizaBatalha();
    }//GEN-LAST:event_hab1ActionPerformed

    private void hab2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hab2ActionPerformed
        pokemonVez.setHabilidadeEscolhida(2);
        treinadorVez.escolheAtaque(pokemonVez);
        battle.ataque(treinadorVez);
        atualizaBatalha();
    }//GEN-LAST:event_hab2ActionPerformed

    private void hab3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hab3ActionPerformed
        pokemonVez.setHabilidadeEscolhida(3);
        treinadorVez.escolheAtaque(pokemonVez);
        battle.ataque(treinadorVez);
        atualizaBatalha();
    }//GEN-LAST:event_hab3ActionPerformed

    private void hab4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hab4ActionPerformed
        pokemonVez.setHabilidadeEscolhida(4);
        treinadorVez.escolheAtaque(pokemonVez);
        battle.ataque(treinadorVez);
        atualizaBatalha();
    }//GEN-LAST:event_hab4ActionPerformed
    
    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(Tela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(Tela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(Tela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(Tela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JProgressBar Vida1;
    private javax.swing.JProgressBar Vida2;
    private javax.swing.JProgressBar Vida3;
    private javax.swing.JProgressBar Vida4;
    private javax.swing.JProgressBar Vida5;
    private javax.swing.JProgressBar Vida6;
    private javax.swing.JPanel batalha;
    private javax.swing.JButton comecarJogo;
    private javax.swing.JPanel escolherTime;
    private javax.swing.JButton hab1;
    private javax.swing.JButton hab2;
    private javax.swing.JButton hab3;
    private javax.swing.JButton hab4;
    private javax.swing.JButton iniciarBatalha;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel pokemon1;
    private javax.swing.JLabel pokemon2;
    private javax.swing.JLabel pokemon3;
    private javax.swing.JLabel pokemon4;
    private javax.swing.JLabel pokemon5;
    private javax.swing.JLabel pokemon6;
    private javax.swing.JPanel telaInicial;
    private javax.swing.JButton time1;
    private javax.swing.JButton time2;
    private javax.swing.JButton time3;
    private javax.swing.JButton time4;
    // End of variables declaration//GEN-END:variables
}

